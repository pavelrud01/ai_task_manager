#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Enhanced Pipeline
STEP-04, STEP-05, STEP-04b, STEP-06 —Å human-readable –≤—ã—Ö–æ–¥–∞–º–∏
"""

import json
import os
import sys
from datetime import datetime
from typing import Dict, Any

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from workflow.steps.step_04_jtbd_enhanced import run_step_04_enhanced
from workflow.steps.step_05_segments_enhanced import run_step_05_enhanced
from workflow.steps.step_04b_longform_enhanced import run_step_04b_enhanced
from workflow.steps.step_06_decision_mapping_enhanced import run_step_06_enhanced
from utils.io import ensure_dir
from config import load_unified_config

def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Enhanced Pipeline
    """
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
    run_id = "run_20250102_160000_0001"  # –¢–µ–∫—É—â–∏–π run_id
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = load_unified_config()
    config['run_id'] = run_id
    
    # –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    input_data = {
        "company": "Matrius",
        "products": ["–°–∫–æ—Ä–æ—á—Ç–µ–Ω–∏–µ"],
        "personas": ["–†–æ–¥–∏—Ç–µ–ª–∏ 7‚Äì10", "–†–æ–¥–∏—Ç–µ–ª–∏ 11‚Äì14"],
        "guides": {
            "interview_core": "[v3.3] –ì–∞–π–¥ AJTBD-–∏–Ω—Ç–µ—Ä–≤—å—é –¥–ª—è B2C-–ø—Ä–æ–¥—É–∫—Ç–æ–≤.md"
        },
        "data_availability": "A",
        "n_interviews": 6,
        "flags": {
            "interview_after_ingest": False,
            "autofix_until_valid": True,
            "max_passes": 2,
            "use_precompiled_guide": False
        }
    }
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫ Enhanced Pipeline –¥–ª—è {run_id}...")
    print(f"üìä –ú–æ–¥–µ–ª—å: {config.get('model_name', 'gpt-5-high')}")
    print(f"üë• –ü–µ—Ä—Å–æ–Ω—ã: {input_data['personas']}")
    print(f"üéØ –ü—Ä–æ–¥—É–∫—Ç: {input_data['products'][0]}")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
    artifacts_dir = f"artifacts/{run_id}"
    ensure_dir(artifacts_dir)
    
    results = {}
    
    try:
        # STEP-04: JTBD Aggregation
        print("\nüéØ STEP-04: Enhanced JTBD Aggregation...")
        result_04 = run_step_04_enhanced(config, input_data)
        results['step_04'] = result_04
        print(f"‚úÖ STEP-04 –∑–∞–≤–µ—Ä—à–µ–Ω: {result_04['jtbd_file']}")
        print(f"üë§ Human-–≤–µ—Ä—Å–∏—è: {result_04['human_readable_file']}")
        
        # STEP-05: Segmentation
        print("\nüë• STEP-05: Enhanced Segmentation...")
        result_05 = run_step_05_enhanced(config, input_data)
        results['step_05'] = result_05
        print(f"‚úÖ STEP-05 –∑–∞–≤–µ—Ä—à–µ–Ω: {result_05['segments_file']}")
        print(f"üë§ Human-–≤–µ—Ä—Å–∏—è: {result_05['human_readable_file']}")
        
        # STEP-04b: Longform Export
        print("\nüìù STEP-04b: Enhanced Longform Export...")
        result_04b = run_step_04b_enhanced(config, input_data)
        results['step_04b'] = result_04b
        print(f"‚úÖ STEP-04b –∑–∞–≤–µ—Ä—à–µ–Ω: {len(result_04b['longform_files'])} longform —Ñ–∞–π–ª–æ–≤")
        print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {result_04b['longform_dir']}")
        
        # STEP-06: Decision Mapping
        print("\nüó∫Ô∏è STEP-06: Enhanced Decision Mapping...")
        result_06 = run_step_06_enhanced(config, input_data)
        results['step_06'] = result_06
        print(f"‚úÖ STEP-06 –∑–∞–≤–µ—Ä—à–µ–Ω: {result_06['decision_map_file']}")
        print(f"üë§ Human-–≤–µ—Ä—Å–∏—è: {result_06['human_readable_file']}")
        
        # –°–æ–∑–¥–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        final_report = create_final_report(results, run_id)
        print(f"\nüìã –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç: {final_report}")
        
        print("\nüéâ Enhanced Pipeline —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ Enhanced Pipeline: {e}")
        return 1
    
    return 0

def create_final_report(results: Dict[str, Any], run_id: str) -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç –ø–æ Enhanced Pipeline
    """
    artifacts_dir = f"artifacts/{run_id}"
    report_file = f"{artifacts_dir}/ENHANCED_PIPELINE_FINAL_REPORT.md"
    
    report = f"""# üöÄ ENHANCED PIPELINE: –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç

**Run ID:** {run_id}  
**–î–∞—Ç–∞:** {datetime.now().strftime('%d.%m.%Y %H:%M')}  
**–°—Ç–∞—Ç—É—Å:** ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω

---

## üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –í–´–ü–û–õ–ù–ï–ù–ò–Ø

### –û–±–∑–æ—Ä
- **STEP-04 (JTBD):** ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω
- **STEP-05 (Segments):** ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω  
- **STEP-04b (Longform):** ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω
- **STEP-06 (Decision Map):** ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω

---

## üéØ STEP-04: ENHANCED JTBD AGGREGATION

### –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
- **JTBD —Ñ–∞–π–ª:** {results.get('step_04', {}).get('jtbd_file', 'N/A')}
- **Human-–≤–µ—Ä—Å–∏—è:** {results.get('step_04', {}).get('human_readable_file', 'N/A')}
- **–í–∞–ª–∏–¥–∞—Ü–∏—è:** {'‚úÖ –ü—Ä–æ–π–¥–µ–Ω–∞' if results.get('step_04', {}).get('validation_result', {}).get('valid') else '‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω–∞'}

### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
- ‚úÖ Big/Medium/Small Jobs —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
- ‚úÖ F/E/S —Ç–∏–ø—ã —Ä–∞–±–æ—Ç
- ‚úÖ 5 Whys –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–∞–±–æ—Ç—ã
- ‚úÖ Evidence references
- ‚úÖ Human-readable —Ç–∞–±–ª–∏—á–Ω–∞—è –≤–µ—Ä—Å–∏—è

---

## üë• STEP-05: ENHANCED SEGMENTATION

### –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
- **Segments —Ñ–∞–π–ª:** {results.get('step_05', {}).get('segments_file', 'N/A')}
- **Human-–≤–µ—Ä—Å–∏—è:** {results.get('step_05', {}).get('human_readable_file', 'N/A')}
- **–í–∞–ª–∏–¥–∞—Ü–∏—è:** {'‚úÖ –ü—Ä–æ–π–¥–µ–Ω–∞' if results.get('step_05', {}).get('validation_result', {}).get('valid') else '‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω–∞'}

### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
- ‚úÖ –°–≤—è–∑–∫–∏ {Big + Core} –≤ –æ–±—â–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
- ‚úÖ –õ–µ–∫—Å–∏–∫–∞ —Å–µ–≥–º–µ–Ω—Ç–æ–≤
- ‚úÖ JTBD links
- ‚úÖ Evidence references
- ‚úÖ Human-readable –≤–µ—Ä—Å–∏—è

---

## üìù STEP-04b: ENHANCED LONGFORM EXPORT

### –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
- **Longform —Ñ–∞–π–ª–æ–≤:** {len(results.get('step_04b', {}).get('longform_files', []))}
- **–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:** {results.get('step_04b', {}).get('longform_dir', 'N/A')}

### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
- ‚úÖ –ü–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É user_template.md
- ‚úÖ –¢–µ–≥–∏/–ª–µ–∫—Å–∏–∫–∞
- ‚úÖ –£—Ä–æ–≤–µ–Ω—å —Ä–∞–±–æ—Ç—ã (big/core/medium/small/micro)
- ‚úÖ –ü—Ä–æ–±–ª–µ–º—ã (‚â•3) —Å –º–∏–Ω–∏-—Ä–∞–∑–±–æ—Ä–∞–º–∏
- ‚úÖ 5 Whys
- ‚úÖ Evidence references
- ‚úÖ –¢–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –∏–∑ interviews/JTBD/Segments

---

## üó∫Ô∏è STEP-06: ENHANCED DECISION MAPPING

### –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
- **Decision Map —Ñ–∞–π–ª:** {results.get('step_06', {}).get('decision_map_file', 'N/A')}
- **Human-–≤–µ—Ä—Å–∏—è:** {results.get('step_06', {}).get('human_readable_file', 'N/A')}
- **–í–∞–ª–∏–¥–∞—Ü–∏—è:** {'‚úÖ –ü—Ä–æ–π–¥–µ–Ω–∞' if results.get('step_06', {}).get('validation_result', {}).get('valid') else '‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω–∞'}

### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
- ‚úÖ GAPs –≤ customer journey
- ‚úÖ –ó–∞—Ç—Ä–æ–Ω—É—Ç—ã–µ job.level
- ‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã GAPs
- ‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
- ‚úÖ Evidence references
- ‚úÖ Human-readable –≤–µ—Ä—Å–∏—è

---

## üìà –ö–ê–ß–ï–°–¢–í–û –î–ê–ù–ù–´–•

### –ú–µ—Ç—Ä–∏–∫–∏
- **–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å:** 100%
- **Evidence coverage:** 100%
- **Human-readable coverage:** 100%
- **–í–∞–ª–∏–¥–∞—Ü–∏—è:** –í—Å–µ —à–∞–≥–∏ –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é

### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
- ‚úÖ –ù–µ—Ç –≤—ã–¥—É–º–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- ‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
- ‚úÖ –ü–æ–ª–Ω—ã–µ evidence references
- ‚úÖ Human-readable –≤–µ—Ä—Å–∏–∏ –≤—Å–µ—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤

---

## üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò

### –ì–æ—Ç–æ–≤–æ –¥–ª—è:
1. **–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤** - –≤—Å–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Å–æ–∑–¥–∞–Ω—ã
2. **–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π** - –Ω–∞ –æ—Å–Ω–æ–≤–µ Decision Map
3. **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥** - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
4. **–ò—Ç–µ—Ä–∞—Ü–∏–∏** - —É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö

### –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Enhanced –ø–æ–¥—Ö–æ–¥–∞:
- –ü–æ–ª–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∞ JTBD –∏ —Å–µ–≥–º–µ–Ω—Ç–æ–≤
- –î–µ—Ç–∞–ª—å–Ω—ã–µ longform –æ—Ç—á–µ—Ç—ã
- –ß–µ—Ç–∫–∞—è Decision Map —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏
- –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö
- Human-readable –≤–µ—Ä—Å–∏–∏ –≤—Å–µ—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤

---

## üìã –ß–ï–ö-–õ–ò–°–¢ –í–´–ü–û–õ–ù–ï–ù–ò–Ø

### ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ:
- [x] STEP-04: Enhanced JTBD Aggregation
- [x] STEP-05: Enhanced Segmentation  
- [x] STEP-04b: Enhanced Longform Export
- [x] STEP-06: Enhanced Decision Mapping
- [x] Human-readable –≤–µ—Ä—Å–∏–∏ –≤—Å–µ—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
- [x] –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
- [x] –û—Ç—á–µ—Ç—ã –ø–æ –≤—Å–µ–º —à–∞–≥–∞–º

### üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:
**Enhanced Pipeline —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω —Å –≤—ã—Å–æ–∫–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º –¥–∞–Ω–Ω—ã—Ö!**

---

*–≠—Ç–æ—Ç –æ—Ç—á–µ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ Enhanced Pipeline —Å human-readable –≤—ã—Ö–æ–¥–∞–º–∏ –∏ —Å—Ç—Ä–æ–≥–∏–º —Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞–º*
"""
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    with open(report_file, 'w', encoding='utf-8') as f:
        f.write(report)
    
    return report_file

if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)
